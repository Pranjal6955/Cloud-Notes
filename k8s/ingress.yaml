apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cloud-notes-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Content-Type, Authorization"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    # WebSocket support for real-time collaboration
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "cloud-notes-backend-service"
spec:
  ingressClassName: nginx
  rules:
  - host: cloud-notes.local
    http:
      paths:
      # Frontend routes
      - path: /
        pathType: Prefix
        backend:
          service:
            name: cloud-notes-frontend-service
            port:
              number: 80
      # API routes
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: cloud-notes-backend-service
            port:
              number: 8080
      # WebSocket route
      - path: /ws
        pathType: Prefix
        backend:
          service:
            name: cloud-notes-backend-service
            port:
              number: 8080
  tls:
  - hosts:
    - cloud-notes.local
    secretName: cloud-notes-tls
---
# Optional: TLS Certificate (self-signed for development)
apiVersion: v1
kind: Secret
metadata:
  name: cloud-notes-tls
type: kubernetes.io/tls
data:
  # Base64 encoded certificate and key
  # Replace with actual certificates in production
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0t